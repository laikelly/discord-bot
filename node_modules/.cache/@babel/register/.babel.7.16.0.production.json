{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/kellylai/Documents/discord_bot/\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"/Users/kellylai/Documents/discord_bot\",\"filename\":\"/Users/kellylai/Documents/discord_bot/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/kellylai/Documents/discord_bot\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0:production": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/kellylai/Documents/discord_bot/",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "/Users/kellylai/Documents/discord_bot",
      "filename": "/Users/kellylai/Documents/discord_bot/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "browserslistConfigFile": false,
      "envName": "production",
      "root": "/Users/kellylai/Documents/discord_bot",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-class-static-block",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-private-property-in-object",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-chaining",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/kellylai/Documents/discord_bot/index.js",
        "plugins": [
          "classStaticBlock",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/kellylai/Documents/discord_bot/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/kellylai/Documents/discord_bot/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire('dotenv').config(); //initialize dotenv\n\n\nconst Discord = require('discord.js'); //import discord.js\n\n\nconst axios = require('axios'); //import axios\n// const client = new Discord.Client(); //create new client\n\n\nconst {\n  MessageEmbed\n} = require('discord.js');\n\nconst {\n  Client,\n  Intents\n} = require('discord.js');\n\nconst client = new Client({\n  intents: [Intents.FLAGS.GUILDS, Intents.FLAGS.GUILD_MESSAGES]\n});\nclient.on('ready', () => {\n  console.info(`Logged in as ${client.user.tag}!`);\n});\nclient.on('message', async msg => {\n  switch (msg.content) {\n    case \"hi\":\n      msg.reply(\"Welcome!\");\n      break;\n    // case \"!meme\":\n    //     msg.channel.send(\"Here's your meme!\");\n    //     const img = await getMeme();\n    //     msg.channel.send(img);\n    //     break\n\n    case \"!dlrb\":\n      const info = await getInfo('diliraba');\n      msg.channel.send(info);\n      break;\n  }\n}); // async function getMeme(){\n//     const res = await axios.get(`https://memeapi.pythonanywhere.com/`);\n//     return res.data.memes[0].url;\n// }\n\nasync function getInfo(name) {\n  const res = await axios.get(`https://api.tvmaze.com/search/people?q=${name}`);\n  const embed = new MessageEmbed().setColor(`#bee2e7`).setAuthor('Actor/Actress Personal Information').setTitle(`${res.data[0].person.name}`).setURL(`${res.data[0].person.url}`).setDescription(`Gender: ${res.data[0].person.gender}\n        Birthday: ${res.data[0].person.birthday}\n        Born in: ${res.data[0].person.country.name}`).setThumbnail(`${res.data[0].person.image.medium}`).setTimestamp();\n  return {\n    embeds: [embed]\n  }; //image\n}\n\nclient.login(process.env.TOKEN); //login bot using token\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJEaXNjb3JkIiwiYXhpb3MiLCJNZXNzYWdlRW1iZWQiLCJDbGllbnQiLCJJbnRlbnRzIiwiY2xpZW50IiwiaW50ZW50cyIsIkZMQUdTIiwiR1VJTERTIiwiR1VJTERfTUVTU0FHRVMiLCJvbiIsImNvbnNvbGUiLCJpbmZvIiwidXNlciIsInRhZyIsIm1zZyIsImNvbnRlbnQiLCJyZXBseSIsImdldEluZm8iLCJjaGFubmVsIiwic2VuZCIsIm5hbWUiLCJyZXMiLCJnZXQiLCJlbWJlZCIsInNldENvbG9yIiwic2V0QXV0aG9yIiwic2V0VGl0bGUiLCJkYXRhIiwicGVyc29uIiwic2V0VVJMIiwidXJsIiwic2V0RGVzY3JpcHRpb24iLCJnZW5kZXIiLCJiaXJ0aGRheSIsImNvdW50cnkiLCJzZXRUaHVtYm5haWwiLCJpbWFnZSIsIm1lZGl1bSIsInNldFRpbWVzdGFtcCIsImVtYmVkcyIsImxvZ2luIiwicHJvY2VzcyIsImVudiIsIlRPS0VOIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQixHLENBQTRCOzs7QUFDNUIsTUFBTUMsT0FBTyxHQUFHRixPQUFPLENBQUMsWUFBRCxDQUF2QixDLENBQXVDOzs7QUFDdkMsTUFBTUcsS0FBSyxHQUFHSCxPQUFPLENBQUMsT0FBRCxDQUFyQixDLENBQWdDO0FBQ2hDOzs7QUFDQSxNQUFNO0FBQUNJLEVBQUFBO0FBQUQsSUFBaUJKLE9BQU8sQ0FBQyxZQUFELENBQTlCOztBQUNBLE1BQU07QUFBRUssRUFBQUEsTUFBRjtBQUFVQyxFQUFBQTtBQUFWLElBQXNCTixPQUFPLENBQUMsWUFBRCxDQUFuQzs7QUFDQSxNQUFNTyxNQUFNLEdBQUcsSUFBSUYsTUFBSixDQUFXO0FBQUVHLEVBQUFBLE9BQU8sRUFBRSxDQUFDRixPQUFPLENBQUNHLEtBQVIsQ0FBY0MsTUFBZixFQUF1QkosT0FBTyxDQUFDRyxLQUFSLENBQWNFLGNBQXJDO0FBQVgsQ0FBWCxDQUFmO0FBRUFKLE1BQU0sQ0FBQ0ssRUFBUCxDQUFVLE9BQVYsRUFBbUIsTUFBTTtBQUNyQkMsRUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWMsZ0JBQWVQLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZQyxHQUFJLEdBQTdDO0FBQ0gsQ0FGRDtBQUlBVCxNQUFNLENBQUNLLEVBQVAsQ0FBVSxTQUFWLEVBQXFCLE1BQU1LLEdBQU4sSUFBYTtBQUM5QixVQUFRQSxHQUFHLENBQUNDLE9BQVo7QUFDSSxTQUFLLElBQUw7QUFDSUQsTUFBQUEsR0FBRyxDQUFDRSxLQUFKLENBQVUsVUFBVjtBQUNBO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSxTQUFLLE9BQUw7QUFDSSxZQUFNTCxJQUFJLEdBQUcsTUFBTU0sT0FBTyxDQUFDLFVBQUQsQ0FBMUI7QUFDQUgsTUFBQUEsR0FBRyxDQUFDSSxPQUFKLENBQVlDLElBQVosQ0FBaUJSLElBQWpCO0FBQ0E7QUFaUjtBQWNILENBZkQsRSxDQWdCQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlTSxPQUFmLENBQXVCRyxJQUF2QixFQUE0QjtBQUN4QixRQUFNQyxHQUFHLEdBQUcsTUFBTXJCLEtBQUssQ0FBQ3NCLEdBQU4sQ0FBVywwQ0FBeUNGLElBQUssRUFBekQsQ0FBbEI7QUFDQSxRQUFNRyxLQUFLLEdBQUcsSUFBSXRCLFlBQUosR0FDYnVCLFFBRGEsQ0FDSCxTQURHLEVBRWJDLFNBRmEsQ0FFSCxvQ0FGRyxFQUdiQyxRQUhhLENBR0gsR0FBRUwsR0FBRyxDQUFDTSxJQUFKLENBQVMsQ0FBVCxFQUFZQyxNQUFaLENBQW1CUixJQUFLLEVBSHZCLEVBSWJTLE1BSmEsQ0FJTCxHQUFFUixHQUFHLENBQUNNLElBQUosQ0FBUyxDQUFULEVBQVlDLE1BQVosQ0FBbUJFLEdBQUksRUFKcEIsRUFLYkMsY0FMYSxDQUtHLFdBQVVWLEdBQUcsQ0FBQ00sSUFBSixDQUFTLENBQVQsRUFBWUMsTUFBWixDQUFtQkksTUFBTztBQUN6RCxvQkFBb0JYLEdBQUcsQ0FBQ00sSUFBSixDQUFTLENBQVQsRUFBWUMsTUFBWixDQUFtQkssUUFBUztBQUNoRCxtQkFBbUJaLEdBQUcsQ0FBQ00sSUFBSixDQUFTLENBQVQsRUFBWUMsTUFBWixDQUFtQk0sT0FBbkIsQ0FBMkJkLElBQUssRUFQakMsRUFRYmUsWUFSYSxDQVFDLEdBQUVkLEdBQUcsQ0FBQ00sSUFBSixDQUFTLENBQVQsRUFBWUMsTUFBWixDQUFtQlEsS0FBbkIsQ0FBeUJDLE1BQU8sRUFSbkMsRUFTYkMsWUFUYSxFQUFkO0FBVUEsU0FBTztBQUFDQyxJQUFBQSxNQUFNLEVBQUUsQ0FBQ2hCLEtBQUQ7QUFBVCxHQUFQLENBWndCLENBWUU7QUFDN0I7O0FBQ0RuQixNQUFNLENBQUNvQyxLQUFQLENBQWFDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxLQUF6QixFLENBQWlDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9rZWxseWxhaS9Eb2N1bWVudHMvZGlzY29yZF9ib3QvIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnZG90ZW52JykuY29uZmlnKCk7IC8vaW5pdGlhbGl6ZSBkb3RlbnZcbmNvbnN0IERpc2NvcmQgPSByZXF1aXJlKCdkaXNjb3JkLmpzJyk7IC8vaW1wb3J0IGRpc2NvcmQuanNcbmNvbnN0IGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTsgLy9pbXBvcnQgYXhpb3Ncbi8vIGNvbnN0IGNsaWVudCA9IG5ldyBEaXNjb3JkLkNsaWVudCgpOyAvL2NyZWF0ZSBuZXcgY2xpZW50XG5jb25zdCB7TWVzc2FnZUVtYmVkfSA9IHJlcXVpcmUoJ2Rpc2NvcmQuanMnKTtcbmNvbnN0IHsgQ2xpZW50LCBJbnRlbnRzIH0gPSByZXF1aXJlKCdkaXNjb3JkLmpzJyk7XG5jb25zdCBjbGllbnQgPSBuZXcgQ2xpZW50KHsgaW50ZW50czogW0ludGVudHMuRkxBR1MuR1VJTERTLCBJbnRlbnRzLkZMQUdTLkdVSUxEX01FU1NBR0VTXSB9KTtcblxuY2xpZW50Lm9uKCdyZWFkeScsICgpID0+IHtcbiAgICBjb25zb2xlLmluZm8oYExvZ2dlZCBpbiBhcyAke2NsaWVudC51c2VyLnRhZ30hYCk7XG59KTtcblxuY2xpZW50Lm9uKCdtZXNzYWdlJywgYXN5bmMgbXNnID0+IHtcbiAgICBzd2l0Y2ggKG1zZy5jb250ZW50KSB7XG4gICAgICAgIGNhc2UgXCJoaVwiOlxuICAgICAgICAgICAgbXNnLnJlcGx5KFwiV2VsY29tZSFcIik7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgLy8gY2FzZSBcIiFtZW1lXCI6XG4gICAgICAgIC8vICAgICBtc2cuY2hhbm5lbC5zZW5kKFwiSGVyZSdzIHlvdXIgbWVtZSFcIik7XG4gICAgICAgIC8vICAgICBjb25zdCBpbWcgPSBhd2FpdCBnZXRNZW1lKCk7XG4gICAgICAgIC8vICAgICBtc2cuY2hhbm5lbC5zZW5kKGltZyk7XG4gICAgICAgIC8vICAgICBicmVha1xuICAgICAgICBjYXNlIFwiIWRscmJcIjpcbiAgICAgICAgICAgIGNvbnN0IGluZm8gPSBhd2FpdCBnZXRJbmZvKCdkaWxpcmFiYScpO1xuICAgICAgICAgICAgbXNnLmNoYW5uZWwuc2VuZChpbmZvKTtcbiAgICAgICAgICAgIGJyZWFrXG4gICAgfVxufSk7XG4vLyBhc3luYyBmdW5jdGlvbiBnZXRNZW1lKCl7XG4vLyAgICAgY29uc3QgcmVzID0gYXdhaXQgYXhpb3MuZ2V0KGBodHRwczovL21lbWVhcGkucHl0aG9uYW55d2hlcmUuY29tL2ApO1xuLy8gICAgIHJldHVybiByZXMuZGF0YS5tZW1lc1swXS51cmw7XG4vLyB9XG5cbmFzeW5jIGZ1bmN0aW9uIGdldEluZm8obmFtZSl7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgYXhpb3MuZ2V0KGBodHRwczovL2FwaS50dm1hemUuY29tL3NlYXJjaC9wZW9wbGU/cT0ke25hbWV9YCk7XG4gICAgY29uc3QgZW1iZWQgPSBuZXcgTWVzc2FnZUVtYmVkKClcbiAgICAuc2V0Q29sb3IoYCNiZWUyZTdgKVxuICAgIC5zZXRBdXRob3IoJ0FjdG9yL0FjdHJlc3MgUGVyc29uYWwgSW5mb3JtYXRpb24nKVxuICAgIC5zZXRUaXRsZShgJHtyZXMuZGF0YVswXS5wZXJzb24ubmFtZX1gKVxuICAgIC5zZXRVUkwoYCR7cmVzLmRhdGFbMF0ucGVyc29uLnVybH1gKVxuICAgIC5zZXREZXNjcmlwdGlvbihgR2VuZGVyOiAke3Jlcy5kYXRhWzBdLnBlcnNvbi5nZW5kZXJ9XG4gICAgICAgIEJpcnRoZGF5OiAke3Jlcy5kYXRhWzBdLnBlcnNvbi5iaXJ0aGRheX1cbiAgICAgICAgQm9ybiBpbjogJHtyZXMuZGF0YVswXS5wZXJzb24uY291bnRyeS5uYW1lfWApXG4gICAgLnNldFRodW1ibmFpbChgJHtyZXMuZGF0YVswXS5wZXJzb24uaW1hZ2UubWVkaXVtfWApXG4gICAgLnNldFRpbWVzdGFtcCgpXG4gICAgcmV0dXJuIHtlbWJlZHM6IFtlbWJlZF19OyAvL2ltYWdlXG59XG5jbGllbnQubG9naW4ocHJvY2Vzcy5lbnYuVE9LRU4pOyAvL2xvZ2luIGJvdCB1c2luZyB0b2tlblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "Discord",
        "axios",
        "MessageEmbed",
        "Client",
        "Intents",
        "client",
        "intents",
        "FLAGS",
        "GUILDS",
        "GUILD_MESSAGES",
        "on",
        "console",
        "info",
        "user",
        "tag",
        "msg",
        "content",
        "reply",
        "getInfo",
        "channel",
        "send",
        "name",
        "res",
        "get",
        "embed",
        "setColor",
        "setAuthor",
        "setTitle",
        "data",
        "person",
        "setURL",
        "url",
        "setDescription",
        "gender",
        "birthday",
        "country",
        "setThumbnail",
        "image",
        "medium",
        "setTimestamp",
        "embeds",
        "login",
        "process",
        "env",
        "TOKEN"
      ],
      "mappings": ";;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,G,CAA4B;;;AAC5B,MAAMC,OAAO,GAAGF,OAAO,CAAC,YAAD,CAAvB,C,CAAuC;;;AACvC,MAAMG,KAAK,GAAGH,OAAO,CAAC,OAAD,CAArB,C,CAAgC;AAChC;;;AACA,MAAM;AAACI,EAAAA;AAAD,IAAiBJ,OAAO,CAAC,YAAD,CAA9B;;AACA,MAAM;AAAEK,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAsBN,OAAO,CAAC,YAAD,CAAnC;;AACA,MAAMO,MAAM,GAAG,IAAIF,MAAJ,CAAW;AAAEG,EAAAA,OAAO,EAAE,CAACF,OAAO,CAACG,KAAR,CAAcC,MAAf,EAAuBJ,OAAO,CAACG,KAAR,CAAcE,cAArC;AAAX,CAAX,CAAf;AAEAJ,MAAM,CAACK,EAAP,CAAU,OAAV,EAAmB,MAAM;AACrBC,EAAAA,OAAO,CAACC,IAAR,CAAc,gBAAeP,MAAM,CAACQ,IAAP,CAAYC,GAAI,GAA7C;AACH,CAFD;AAIAT,MAAM,CAACK,EAAP,CAAU,SAAV,EAAqB,MAAMK,GAAN,IAAa;AAC9B,UAAQA,GAAG,CAACC,OAAZ;AACI,SAAK,IAAL;AACID,MAAAA,GAAG,CAACE,KAAJ,CAAU,UAAV;AACA;AACJ;AACA;AACA;AACA;AACA;;AACA,SAAK,OAAL;AACI,YAAML,IAAI,GAAG,MAAMM,OAAO,CAAC,UAAD,CAA1B;AACAH,MAAAA,GAAG,CAACI,OAAJ,CAAYC,IAAZ,CAAiBR,IAAjB;AACA;AAZR;AAcH,CAfD,E,CAgBA;AACA;AACA;AACA;;AAEA,eAAeM,OAAf,CAAuBG,IAAvB,EAA4B;AACxB,QAAMC,GAAG,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAW,0CAAyCF,IAAK,EAAzD,CAAlB;AACA,QAAMG,KAAK,GAAG,IAAItB,YAAJ,GACbuB,QADa,CACH,SADG,EAEbC,SAFa,CAEH,oCAFG,EAGbC,QAHa,CAGH,GAAEL,GAAG,CAACM,IAAJ,CAAS,CAAT,EAAYC,MAAZ,CAAmBR,IAAK,EAHvB,EAIbS,MAJa,CAIL,GAAER,GAAG,CAACM,IAAJ,CAAS,CAAT,EAAYC,MAAZ,CAAmBE,GAAI,EAJpB,EAKbC,cALa,CAKG,WAAUV,GAAG,CAACM,IAAJ,CAAS,CAAT,EAAYC,MAAZ,CAAmBI,MAAO;AACzD,oBAAoBX,GAAG,CAACM,IAAJ,CAAS,CAAT,EAAYC,MAAZ,CAAmBK,QAAS;AAChD,mBAAmBZ,GAAG,CAACM,IAAJ,CAAS,CAAT,EAAYC,MAAZ,CAAmBM,OAAnB,CAA2Bd,IAAK,EAPjC,EAQbe,YARa,CAQC,GAAEd,GAAG,CAACM,IAAJ,CAAS,CAAT,EAAYC,MAAZ,CAAmBQ,KAAnB,CAAyBC,MAAO,EARnC,EASbC,YATa,EAAd;AAUA,SAAO;AAACC,IAAAA,MAAM,EAAE,CAAChB,KAAD;AAAT,GAAP,CAZwB,CAYE;AAC7B;;AACDnB,MAAM,CAACoC,KAAP,CAAaC,OAAO,CAACC,GAAR,CAAYC,KAAzB,E,CAAiC",
      "sourceRoot": "/Users/kellylai/Documents/discord_bot/",
      "sourcesContent": [
        "require('dotenv').config(); //initialize dotenv\nconst Discord = require('discord.js'); //import discord.js\nconst axios = require('axios'); //import axios\n// const client = new Discord.Client(); //create new client\nconst {MessageEmbed} = require('discord.js');\nconst { Client, Intents } = require('discord.js');\nconst client = new Client({ intents: [Intents.FLAGS.GUILDS, Intents.FLAGS.GUILD_MESSAGES] });\n\nclient.on('ready', () => {\n    console.info(`Logged in as ${client.user.tag}!`);\n});\n\nclient.on('message', async msg => {\n    switch (msg.content) {\n        case \"hi\":\n            msg.reply(\"Welcome!\");\n            break;\n        // case \"!meme\":\n        //     msg.channel.send(\"Here's your meme!\");\n        //     const img = await getMeme();\n        //     msg.channel.send(img);\n        //     break\n        case \"!dlrb\":\n            const info = await getInfo('diliraba');\n            msg.channel.send(info);\n            break\n    }\n});\n// async function getMeme(){\n//     const res = await axios.get(`https://memeapi.pythonanywhere.com/`);\n//     return res.data.memes[0].url;\n// }\n\nasync function getInfo(name){\n    const res = await axios.get(`https://api.tvmaze.com/search/people?q=${name}`);\n    const embed = new MessageEmbed()\n    .setColor(`#bee2e7`)\n    .setAuthor('Actor/Actress Personal Information')\n    .setTitle(`${res.data[0].person.name}`)\n    .setURL(`${res.data[0].person.url}`)\n    .setDescription(`Gender: ${res.data[0].person.gender}\n        Birthday: ${res.data[0].person.birthday}\n        Born in: ${res.data[0].person.country.name}`)\n    .setThumbnail(`${res.data[0].person.image.medium}`)\n    .setTimestamp()\n    return {embeds: [embed]}; //image\n}\nclient.login(process.env.TOKEN); //login bot using token\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1638736528187
  }
}